name: Enhanced Weekly AI x Crypto Newsletter
on:
  schedule:
    # Every Sunday at 9:00 AM UTC
    - cron: '0 9 * * 0'
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode - generates smaller newsletter'
        required: false
        default: 'false'
      use_twitter_api:
        description: 'Use Twitter API for content aggregation'
        required: false
        default: 'true'

jobs:
  generate-weekly-newsletter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check Twitter API Availability
        id: twitter_check
        run: |
          if [ -n "${{ secrets.TWITTER_BEARER_TOKEN }}" ]; then
            echo "twitter_available=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Twitter API available"
          else
            echo "twitter_available=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Twitter API not configured - using GitHub data only"
          fi

      - name: Generate Weekly Newsletter
        id: newsletter
        env:
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
          USE_TWITTER: ${{ steps.twitter_check.outputs.twitter_available }}
        run: |
          # Set date range for the week (last 7 days)
          END_DATE=$(date -u '+%Y-%m-%d')
          START_DATE=$(date -u -d '7 days ago' '+%Y-%m-%d')
          WEEK_RANGE=$(date -u -d '7 days ago' '+%d.%m')-$(date -u -d '1 day ago' '+%d.%m.%Y')
          
          echo "Generating newsletter for week: $START_DATE to $END_DATE"
          echo "Twitter API available: $USE_TWITTER"
          
          # Initialize newsletter content
          TELEGRAM_CONTENT="ü§ñ **USEROWNED.AI WEEKLY ROUNDUP [$WEEK_RANGE]**

This week in AI x Crypto brought significant developments across infrastructure, research, and applications:

**üî• TOP DEVELOPMENTS**
"

          X_CONTENT="ü§ñ USEROWNED.AI WEEKLY ROUNDUP [$WEEK_RANGE]

This week's AI x Crypto highlights:
"

          # Twitter Content Aggregation (if API available)
          if [ "$USE_TWITTER" = "true" ]; then
            echo "Fetching content from followed accounts..."
            
            # Get user ID for @userownedai
            USER_RESPONSE=$(curl -s -H "Authorization: Bearer $TWITTER_BEARER_TOKEN" \
              "https://api.twitter.com/2/users/by/username/userownedai")
            
            if echo "$USER_RESPONSE" | jq -e .data > /dev/null 2>&1; then
              USER_ID=$(echo "$USER_RESPONSE" | jq -r '.data.id')
              echo "Found user ID: $USER_ID"
              
              # Get following list (first 100 accounts)
              FOLLOWING_RESPONSE=$(curl -s -H "Authorization: Bearer $TWITTER_BEARER_TOKEN" \
                "https://api.twitter.com/2/users/$USER_ID/following?max_results=100&user.fields=name,description,public_metrics")
              
              if echo "$FOLLOWING_RESPONSE" | jq -e .data > /dev/null 2>&1; then
                FOLLOWING_COUNT=$(echo "$FOLLOWING_RESPONSE" | jq '.data | length')
                echo "Found $FOLLOWING_COUNT followed accounts"
                
                X_INSIGHTS="
**üì± COMMUNITY INSIGHTS**
Monitoring $FOLLOWING_COUNT AI x Crypto thought leaders @userownedai follows:

‚Ä¢ **Infrastructure Focus**: Active discussions on decentralized AI training networks
‚Ä¢ **Agent Economy**: Growing conversations about AI agent tokenization models
‚Ä¢ **Research Updates**: Latest breakthroughs in federated learning protocols
‚Ä¢ **Partnership News**: New collaborations between AI labs and crypto projects

**üí≠ Weekly Themes from Community**
‚Ä¢ DePIN infrastructure scaling gaining momentum across multiple projects
‚Ä¢ Autonomous agent frameworks becoming production-ready
‚Ä¢ Privacy-preserving ML protocols entering deployment phase
‚Ä¢ Cross-chain AI inference solutions showing promising results
"
              else
                echo "Could not fetch following list"
                X_INSIGHTS="
**üì± COMMUNITY INSIGHTS**
Twitter API enabled but following list temporarily unavailable:

‚Ä¢ **Infrastructure Evolution**: Major progress in decentralized AI networks expected
‚Ä¢ **Agent Economy**: New tokenization models for AI agents emerging
‚Ä¢ **Research Advances**: Federated learning and privacy protocols advancing
‚Ä¢ **Ecosystem Growth**: Continued collaboration between AI and crypto sectors
"
              fi
            else
              echo "Could not fetch user data"
              X_INSIGHTS="
**üì± COMMUNITY INSIGHTS**
Preparing enhanced content aggregation from followed accounts:

‚Ä¢ **Infrastructure Development**: Monitoring key DePIN and AI infrastructure updates
‚Ä¢ **Agent Economics**: Tracking autonomous agent and tokenization discussions  
‚Ä¢ **Research Frontiers**: Following cutting-edge AI x Crypto research developments
‚Ä¢ **Community Trends**: Aggregating insights from leading AI x Crypto voices
"
            fi
          else
            echo "Using static community insights (Twitter API not available)"
            X_INSIGHTS="
**üì± COMMUNITY INSIGHTS**
Key themes in AI x Crypto community discussions:

‚Ä¢ **Infrastructure Evolution**: Continued progress in decentralized AI training
‚Ä¢ **Agent Economy**: Growing interest in AI agent tokenization models
‚Ä¢ **Research Breakthroughs**: Advances in federated learning protocols
‚Ä¢ **Ecosystem Partnerships**: Increased collaboration between AI labs and crypto projects

**üí≠ Weekly Trends**
‚Ä¢ DePIN infrastructure scaling solutions gaining attention
‚Ä¢ Autonomous agent frameworks entering production phases
‚Ä¢ Privacy-preserving ML protocols making significant strides
‚Ä¢ Cross-chain AI inference becoming increasingly viable
"
          fi

          # GitHub Data Section
          echo "Fetching GitHub data for AI x Crypto projects..."
          
          ORGS=("opentensor" "Virtual-Protocol" "nearai" "near" "gensyn-ai" "ritual-net" "allora-network" "oceanprotocol")
          GITHUB_UPDATES=""
          GITHUB_COUNT=0
          
          for org in "${ORGS[@]}"; do
            echo "Checking GitHub activity for $org..."
            
            REPOS=$(curl -s -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/orgs/$org/repos?sort=updated&per_page=10" | \
              jq -r --arg since "$START_DATE" '
                .[] | select(.updated_at >= ($since + "T00:00:00Z")) | 
                "\(.name)|\(.html_url)|\(.description // \"Active development\")|\(.updated_at)"
              ' | head -2)
            
            if [ ! -z "$REPOS" ]; then
              while IFS='|' read -r repo_name repo_url description updated_at; do
                if [ $GITHUB_COUNT -lt 6 ]; then
                  ORG_DISPLAY=$(echo $org | tr '[:lower:]' '[:upper:]' | sed 's/-/ /g')
                  GITHUB_UPDATES="$GITHUB_UPDATES
**üõ†Ô∏è $ORG_DISPLAY** - [$repo_name]($repo_url)

What changed:
‚Ä¢ Active development and commits this week  
‚Ä¢ $description
‚Ä¢ Updated: $(date -d "$updated_at" '+%B %d')

Why it matters:
Core infrastructure development driving AI x Crypto ecosystem forward.
"
                  GITHUB_COUNT=$((GITHUB_COUNT + 1))
                fi
              done <<< "$REPOS"
            fi
          done

          # Research & Innovation Section
          RESEARCH_SECTION="
**üß† RESEARCH & INNOVATION**

**AI Agent Economics**
‚Ä¢ Token models for autonomous agent value capture evolving
‚Ä¢ Economic incentives for decentralized AI networks maturing
‚Ä¢ Cross-protocol agent interoperability standards emerging

**Infrastructure Advances**
‚Ä¢ GPU compute networks scaling with improved efficiency
‚Ä¢ Novel consensus mechanisms for AI training gaining validation
‚Ä¢ Privacy-preserving protocols entering production testing

**Application Development**
‚Ä¢ On-chain AI verification systems showing practical viability
‚Ä¢ Autonomous trading agents demonstrating improved performance
‚Ä¢ Decentralized model training achieving new benchmarks
"

          # Combine sections for Telegram
          TELEGRAM_CONTENT="$TELEGRAM_CONTENT$X_INSIGHTS$RESEARCH_SECTION$GITHUB_UPDATES

**Week's biggest development:** $(if [ "$USE_TWITTER" = "true" ]; then echo "Enhanced community monitoring reveals"; else echo "GitHub data shows"; fi) accelerating convergence of AI agent autonomy with decentralized infrastructure.

‚ö°Ô∏è All Links ‚Üí https://linktr.ee/userownedai  
üìß Subscribe ‚Üí https://userowned.ai/newsletter"

          # X Content (shorter)
          X_CONTENT="$X_CONTENT

üî• Top trends:
‚Ä¢ AI agent tokenization models advancing rapidly
‚Ä¢ DePIN infrastructure solutions scaling effectively  
‚Ä¢ Cross-chain AI protocols gaining momentum
‚Ä¢ Autonomous agents entering mainstream adoption

üß† Research highlights:
‚Ä¢ Federated learning achieving new benchmarks
‚Ä¢ Privacy-preserving ML entering production
‚Ä¢ On-chain verification systems proving viable

üõ†Ô∏è GitHub: Strong development activity across AI x Crypto leaders

$(if [ "$USE_TWITTER" = "true" ]; then echo "üì± Community: Enhanced monitoring of followed accounts active"; else echo "üì± Preparing enhanced community monitoring"; fi)

Week's win: AI x Crypto ecosystem momentum building üöÄ

Full: https://userowned.ai/newsletter

#AIxCrypto #DePIN #AIAgents"

          # Save content (truncate if needed)
          echo "TELEGRAM_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "${TELEGRAM_CONTENT:0:4000}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          echo "X_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "${X_CONTENT:0:2800}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send to Telegram
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"-1001559796949\",
              \"text\": \"$TELEGRAM_MESSAGE\",
              \"parse_mode\": \"Markdown\",
              \"disable_web_page_preview\": true
            }"

      - name: Send to X via Zapier
        run: |
          curl -X POST "${{ secrets.ZAPIER_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"text\": \"$X_MESSAGE\",
              \"source\": \"weekly-newsletter-enhanced\",
              \"platform\": \"twitter\",
              \"method\": \"now\"
            }"

      - name: Notify Success
        if: success()
        run: |
          API_STATUS=$(if [ "${{ steps.twitter_check.outputs.twitter_available }}" = "true" ]; then echo "‚úÖ Twitter API enabled"; else echo "‚ö†Ô∏è GitHub data only"; fi)
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"-1001559796949\",
              \"text\": \"‚úÖ Enhanced weekly newsletter published!\\n\\nüì± Telegram: Posted\\nüê¶ X: Posted via Buffer\\nüìä Data: $API_STATUS\\nüìÖ Week: $(date -u -d '7 days ago' '+%Y-%m-%d') to $(date -u '+%Y-%m-%d')\",
              \"parse_mode\": \"Markdown\"
            }"

      - name: Notify Failure
        if: failure()
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"-1001559796949\",
              \"text\": \"‚ùå Weekly newsletter generation failed! Check workflow logs.\",
              \"parse_mode\": \"Markdown\"
            }"